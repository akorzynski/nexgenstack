services:

  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      retries: 12
      timeout: 20s

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics list_queues"]
      interval: 20s
      retries: 12
      timeout: 20s

  conductor:
    build: .
    restart: unless-stopped
    command: >
      sh -c "
        set -xe &&
        poetry run python3 manage.py migrate &&
        poetry run uvicorn nexgenstack.asgi:application --host 0.0.0.0 --port 8000
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DJANGO_DB=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672

  compute:
    build: .
    restart: unless-stopped
    command: >
      sh -c "
        set -xe &&
        export COMPUTE_NODE_NAME="compute-`poetry run python3 get_docker_compose_index.py`" &&
        poetry run python3 manage.py compute_node
      "
    volumes:
      - .:/app
    depends_on: 
      rabbitmq:
        condition: service_healthy
    environment:
      - CONDUCTOR_API_URL=http://conductor:8000
      - HYPERVISOR_CLIENT_API_KEY=test_hypervisor_client_api_key
      - COMPUTE_NODE_TOKEN=test_token
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672

volumes:
  pgdata:
